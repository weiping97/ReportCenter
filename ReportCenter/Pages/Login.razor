@page "/login"
<h3>Login</h3>
@inject IAPIHelper _apiHelper
@inject ILoggedInUserModel _user
@inject NavigationManager navManager

<div class="col-md-6">
    <EditForm Model="@loginPayload" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary Model="@loginPayload" />

        <div class="form-group">
            <label class="control-label">Email:</label>
            <InputText @bind-Value="loginPayload.email" class="form-control"></InputText>
            <ValidationMessage For="@(() => loginPayload.email)" class="text-danger" />
        </div>
        <div class="form-group">
            <label class="control-label">Password</label>
            <InputText type="password" @bind-Value="loginPayload.password" class="form-control"></InputText>
            <ValidationMessage For="@(() => loginPayload.password)" class="text-danger" />
        </div>
        <div class="form-group">
            <input type="submit" value="Login" class="btn btn-primary" />
        </div>
    </EditForm>
</div>




@code {
    private LoginViewModel loginPayload = new LoginViewModel();

    private async Task HandleValidSubmit()
    {
        var result = await _apiHelper.AuthenticateUser(loginPayload.email, loginPayload.password);

        await _apiHelper.GetLoggedInUserInfo(result.AccessToken);

        var temp = _user.EmailAddress;
    }
}
